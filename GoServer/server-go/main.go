/*
 * dev-serverless-slack-bot
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 2022-11-30T03:41:31Z
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package main

import (
	"log"
	"net/http"
	"encoding/json"
	"fmt"
	

	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    sw "github.com/myname/myrepo/go"
	//
	sw "server.com/gin/go"
)

func main() {

	a := `{"query":"query queryForTimeoff {\r\n\tusermanagementdb_Organization(where: {organization_employees: {workspaceId: {_eq: \"T03E01NGG81\"}}}) {\r\n\t\tslackChannel\r\n\t}\r\n}"}`

    query := `{"query":"query queryForTimeoff {
        usermanagementdb_Organization(where: {organization_employees: {workspaceId: {_eq: "T03E01NGG81"}}}) {
            slackChannel
        }
    }"
    }`

    fmt.Println(a)
	data := jsonEscape(a)
	fmt.Println(query);
	fmt.Println(data);

    bytes, err := json.Marshal([]byte(query))
    if err != nil {
        fmt.Println("json error")
    }

    fmt.Println(bytes)

	log.Printf("Server started")
	router := sw.NewRouter()
	log.Fatal(http.ListenAndServe(":8000", router))
}


func jsonEscape(i string) string {
	b, err := json.Marshal(i)
	if err != nil {
		panic(err)
	}
	s := string(b)
	return s[1 : len(s)-1]

}